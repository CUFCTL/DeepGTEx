manifest {
	mainScript = "main.nf"
	defaultBranch = "master"
	nextflowVersion = ">=19.04.0"
}



params {
	conda_env = "gene-oracle"
	chunks = 10

	input {
		dir = "input"
		data_txt = "*.emx.txt"
		data_npy = "*.emx.npy"
		rownames = "*.emx.rownames.txt"
		colnames = "*.emx.colnames.txt"
		labels = "*.labels.txt"
		gmt_files = "*.genesets.txt"
	}

	output {
		dir = "output"
	}

	phase1 {
		enabled = true
		model = "lr"
		random_min = 1
		random_max = 20
		random_iters = 10
		threshold = 1
		n_sets = 5
	}

	phase2 {
		enabled = true
		model = "lr"
		threshold = 75
		visualize = true
	}

	phase2_rf {
		enabled = true
		threshold = 75
		visualize = true
	}
}



report {
	enabled = true
	file = "${params.output.dir}/reports/report.html"
}



timeline {
	enabled = true
	file = "${params.output.dir}/reports/timeline.html"
}



trace {
	enabled = true
	fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes"
	file = "${params.output.dir}/reports/trace.txt"
	raw = true
}



docker {
	sudo = false
	runOptions = "--init --runtime=nvidia"
}



singularity {
	runOptions = "--nv"
	autoMounts = true
	cacheDir = "work-singularity"
}



process {
	beforeScript = "source activate ${params.conda_env}"
	container = "systemsgenetics/gene-oracle"
	errorStrategy = { task.attempt <= 2 ? "retry" : "ignore" }
	echo = false
}



profiles {
	standard {
		process.executor = "local"
	}

	testing {
		process.errorStrategy = "terminate"
	}

	pbs {
		process {
			executor = "pbs"
			time = "72h"
			clusterOptions = "-l select=1:mem=2gb:ncpus=2"

			withLabel:gpu {
				clusterOptions = "-l select=1:mem=8gb:ncpus=2:ngpus=2:gpu_model=p100"
			}
		}
		executor {
			queueSize = 100
		}
	}
}
